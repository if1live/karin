service: toki

useDotenv: true

plugins:
  - serverless-scriptable-plugin

provider:
  name: aws
  runtime: nodejs20.x

  region: ap-northeast-1
  stage: dev

  memorySize: 512
  architecture: arm64

  logRetentionInDays: 1
  versionFunctions: false
  timeout: 5

  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB

  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    NODE_OPTIONS: "--enable-source-maps --stack-trace-limit=1000"

    AWS_ACCOUNT_ID: ${aws:accountId}

    STAGE: ${self:provider.stage}
    NODE_ENV: production

    DATABASE_URL: ${env:DATABASE_URL}
    REDIS_URL: ${env:REDIS_URL}

  iam:
    role:
      statements:
        # https://docs.aws.amazon.com/lambda/latest/dg/access-control-identity-based.html
        - Effect: "Allow"
          Action:
            - lambda:ListFunctions
          Resource:
            - "*"
        - Effect: "Allow"
          Action:
            - lambda:ListFunctionUrlConfigs
          Resource:
            - arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:*
        - Effect: "Allow"
          Action:
            - lambda:InvokeFunction
          Resource:
            - arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:toki-${self:provider.stage}-*
        - Effect: "Allow"
          Action:
            - sqs:SendMessage
            - sqs:PurgeQueue
            - sqs:DeleteMessage
            - sqs:DeleteMessageBatch
            - sqs:ReceiveMessage
          Resource:
            - arn:aws:sqs:${self:provider.region}:${aws:accountId}:toki-simple-${self:provider.stage}

package:
  individually: true
  patterns:
    - "!**"
    - "!node_modules/**"

functions:
  httpSite:
    handler: artifact/http_site.dispatch
    url: true
    package:
      patterns:
        - artifact/http_site.mjs*
        - views/**/*
        - static/**/*
    events:
      - httpApi:
          method: ANY
          path: /
      - httpApi:
          method: ANY
          path: /r/{pathname+}
      - httpApi:
          method: ANY
          path: /robots.txt
      - httpApi:
          method: ANY
          path: /static/{pathname+}

  httpAdmin:
    handler: artifact/http_admin.dispatch
    package:
      patterns:
        - artifact/http_admin.mjs*
        - views/**/*
        - static/**/*
    events:
      - httpApi:
          method: ANY
          path: /admin
      - httpApi:
          method: ANY
          path: /admin/{pathname+}

  sqsSimple:
    handler: artifact/sqs_simple.dispatch
    package:
      patterns:
        - artifact/sqs_simple.mjs*
    events:
      - sqs:
          arn: arn:aws:sqs:${self:provider.region}:${aws:accountId}:toki-simple-${self:provider.stage}
          batchSize: 1
          enabled: false

resources:
  Resources:
    SQSQueueSimple:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: toki-simple-${self:provider.stage}
        VisibilityTimeout: 60
        MessageRetentionPeriod: 1209600 # 14 days

custom:
  scriptHooks:
    before:package:createDeploymentArtifacts: pnpm artifact
