// Table for FunctionDefinition
Table karin_function_definition {
  id integer [pk, increment]
  function_name varchar(191) [unique]
  function_arn varchar(191) [unique]
  payload json
}

// FunctionUrlConfig
Table karin_function_url {
  id integer [pk, increment]

  // arn:aws:lambda:ap-northeast-1:123456789012:function:ayane-dev-http
  function_arn varchar(191) [unique]

  // https://abcdefghijk.lambda-url.ap-northeast-1.on.aws/
  function_url varchar(191) [unique]

  payload json
}

// Lambda <-> SQS
// EventSourceMappingConfiguration
// https://www.serverless.com/framework/docs/providers/aws/guide/serverless.yml#sqs
// 속성 이름은 AWS보다 serverless.yml를 우선적으로 선택
// aws lambda web console에 보이는 속성은 다 넣음
Table karin_event_source_mapping {
  id integer [pk, increment]
  uuid varchar(191) [unique]

  // arn:aws:sqs:ap-northeast-1:123456789012:toki-example-dev
  event_source_arn varchar(191) [unique]

  // arn:aws:lambda:ap-northeast-1:123456789012:function:toki-example-dev-sqsMain
  function_arn varchar(191) [unique]

  // The number of records in each batch to send to the function.
  // The maximum is 10,000 for standard queues and 10 for FIFO queues.
  batch_size integer

  // The maximum amount of time to gather records before invoking the function, in seconds.
  // When the batch size is greater than 10, set the batch window to at least 1 second.
  // minimum is 0 and the maximum is 300 (seconds)
  maximum_batching_window integer

  // The maximum number of concurrent function instances that the SQS event source can invoke.
  // Specify a value between 2 and 1000. To deactivate, leave the box empty.
  maximum_concurrency integer

  // value: "ReportBatchItemFailures" or blank?
  // Allow your function to return a partial successful response for a batch of records.
  function_response_type varchar(255)

  status varchar(255)

  payload json
}
